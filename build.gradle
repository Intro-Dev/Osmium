plugins {
	id 'fabric-loom' version '0.10-SNAPSHOT'
	id 'maven-publish'
	// use when loom decides to work
	// id 'io.github.juuxel.loom-quiltflower' version '1.3.0'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven {
		name = "ParchmentMC"
		url = uri("https://maven.parchmentmc.org/")
	}
	maven {
		url 'https://repo.hypixel.net/repository/Hypixel/'
	}
}

dependencies {
	minecraft "com.mojang:minecraft:1.18-pre5"

	mappings(loom.layered {
		officialMojangMappings()
		parchment("org.parchmentmc.data:parchment-1.17.1:2021.09.05@zip")
	})

	modImplementation "net.fabricmc:fabric-loader:0.12.5"
	modImplementation "net.fabricmc.fabric-api:fabric-api:0.42.8+1.18"

	include(modImplementation("net.hypixel:hypixel-api-core:4.1") {
		exclude group: "com.google.code.gson", module: "gson"
		exclude group: "org.apache.httpcomponents", module: "httpclient"
	})
	include(modImplementation("net.hypixel:hypixel-api-transport-apache:4.1") {
		exclude group: "com.google.code.gson", module: "gson"
		exclude group: "org.apache.httpcomponents", module: "httpclient"
	})
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}


java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
	repositories {
	}
}

loom {
	accessWidenerPath = file("src/main/resources/osmium.accesswidener")
}